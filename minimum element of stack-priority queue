// { Driver Code Starts
import java.util.*;



class Get_Min_From_Stack
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		while(T>0)
		{
			int q = sc.nextInt();
			GfG g = new GfG();
			while(q>0)
			{
				int qt = sc.nextInt();
				
				if(qt == 1)
				{
					int att = sc.nextInt();
					g.push(att);
					//System.out.println(att);
				}
				else if(qt == 2)
				{
					System.out.print(g.pop()+" ");
				}
				else if(qt == 3)
				{
					System.out.print(g.getMin()+" ");
				}
			
			q--;
			}
			System.out.println();
		T--;
		}
		
	}
}


// } Driver Code Ends
class GfG
{
    int minEle;
    Stack<Integer> s=new Stack<Integer>();
    PriorityQueue<Integer> p=new  PriorityQueue<Integer>();

    /*returns min element from stack*/
    int getMin()
    {
        
        if(p.size()>0){
            return (p.peek());
        }
        else{
            return (-1);
        }

    }
    
    /*returns poped element from stack*/
    int pop()
    {
        if(!s.empty()){
            int x=s.peek();
            p.remove(x);
            s.pop();
            return x;
        }
        else{
            return -1;
        }
    }

    /*push element x into the stack*/
    void push(int x)
    {
	// Your code here	
	s.push(x);
	p.add(x);
    }	
}

Example:
Input:
1
6
1 2 1 3 2 3 1 1 3   

Output:
3 2 1

Explanation:
Testcase 1:
In the first test case for query 
1 2  the stack will be {2}
1 3  the stack will be {2 3}
2 poped element will be 3 the stack will be {2}
3 min element will be 2 
1 1 the stack will be {2 1}
3 min element will be 1 and
